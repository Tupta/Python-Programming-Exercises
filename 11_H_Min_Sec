#!pythons

#This simply function converts a number 
# of seconds into a string with the number 
# of hours, minutes, and seconds.

def getHoursMinutesSeconds(totalSeconds):
    # If totalSeconds is 0, just return '0s':
    if totalSeconds == 0:
        return "0s"
    
    # Set days, hours and minutes to 0 by default:
    days = 0
    hours = 0
    minutes = 0
    
    # Set days to how many times 86400 seconds can divide totalSeconds.
    # Then set totalSeconds to the remainder:
    if totalSeconds >= 86400:
        days = totalSeconds // 86400
        totalSeconds = totalSeconds % 86400
    
    # Set hours to how many times 3600 seconds can divide totalSeconds.
    # Then set totalSeconds to the remainder:
    if totalSeconds >= 3600:
        hours = totalSeconds // 3600
        totalSeconds = totalSeconds % 3600
    
    # Set minutes to how many times 60 seconds can divide totalSeconds.
    # Then set totalSeconds to the remainder:
    if totalSeconds >= 60:
        minutes = totalSeconds // 60
        totalSeconds = totalSeconds % 60
    
    # Set seconds to the remaining totalSeconds value:
    seconds = totalSeconds
    
    # Create a dhms list that contains the string day/hour/minute/second amounts:
    dhms = []
    
    # If there are one or more days, add the amount with a 'd' suffix:
    if days > 0:
        dhms.append(str(days) + 'd')
    
    # If there are one or more hours, add the amount with a 'h' suffix:
    if hours > 0:
        dhms.append(str(hours) + 'h')
    
    # If there are one or more minutes, add the amount with a 'm' suffix:
    if minutes > 0:
        dhms.append(str(minutes) + 'm')
    
    # If there are one or more seconds, add the amount with a 's' suffix:
    if seconds > 0:
        dhms.append(str(seconds) + 's')
    
    # Join the day/hour/minute/second strings with a space in between them:
    return ' '.join(dhms)

# Test cases
d = getHoursMinutesSeconds(2001)
print(d)

assert getHoursMinutesSeconds(30) == '30s'
assert getHoursMinutesSeconds(60) == '1m'
assert getHoursMinutesSeconds(90) == '1m 30s'
assert getHoursMinutesSeconds(3600) == '1h'
assert getHoursMinutesSeconds(3601) == '1h 1s'
assert getHoursMinutesSeconds(3661) == '1h 1m 1s'
assert getHoursMinutesSeconds(90042) == '1d 1h 42s'
assert getHoursMinutesSeconds(0) == '0s'

print('All tests passed')
