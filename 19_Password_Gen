#!python

# a generatePassword() function that has a length parameter. 
# The length parameter is an integer of how many characters 
# the generated password should have. For security reasons, 
# if length is less than 12, the function forcibly sets it 
# to 12 characters anyway. The password string returned by 
# the function must have at least one lowercase letter, one 
# uppercase letter, one number, and one special character. 
# The special characters for this exercise are ~!@#$%^&*()_+.

# Import the random module for its randint() function.
import random

# Create string constants that for each type of character:
LOWER_LETTERS = 'abcdefghijklmnopqrstuvwxyz'
UPPER_LETTERS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ'
NUMBERS = '1234567890'
SPECIAL = '~!@#$%^&*()_+'

# Create a string that has all of these strings combined:
ALL_CHARS = LOWER_LETTERS + UPPER_LETTERS + NUMBERS + SPECIAL

def generatePassword(length):
    # 12 is the minimum length for passwords:
    if length < 12:
        length = 12

    # Create a password variable that starts as an empty list:
    password = []
    # Add a random character from the lowercase, uppercase, digits, and
    # punctuation character strings:
    password.append(LOWER_LETTERS[random.randint(0, 25)])
    password.append(UPPER_LETTERS[random.randint(0, 25)])
    password.append(NUMBERS[random.randint(0, 9)])
    password.append(SPECIAL[random.randint(0, 12)])

    # Keep adding random characters from the combined string until the
    # password meets the length:
    while len(password) < length:
        password.append(ALL_CHARS[random.randint(0, 74)])

    # Randomly shuffle the password list:
    random.shuffle(password)

    # Join all the strings in the password list into one string to return:
    return ''.join(password)

assert len(generatePassword(8)) == 12

pw = generatePassword(14)
assert len(pw) == 14
hasLowercase = False
hasUppercase = False
hasNumber = False
hasSpecial = False
for character in pw:
    if character in LOWER_LETTERS:
        hasLowercase = True
    if character in UPPER_LETTERS:
        hasUppercase = True
    if character in NUMBERS:
        hasNumber = True
    if character in SPECIAL:
        hasSpecial = True

#Asseration
assert hasLowercase and hasUppercase and hasNumber and hasSpecial
print('all tests passed')